// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  fullname String?
  username String   @unique
  password String
  bio      String?
  profile  String?  @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTteR5C7aU0L5LtNt8c026L5kGCk4H6dy56Cw&s")
  bgImage  String?  @default("https://c.files.bbci.co.uk/5DFC/production/_84606042_satan-promo.jpg")
  role     RoleEnum @default(MEMBER)
  threads  Thread[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users") // for Rename
}

model Thread {
  id           Int     @id @default(autoincrement())
  content      String
  image        String?
  likesCount   Int     @default(0)
  repliesCount Int     @default(0)
  user         User    @relation(fields: [userId], references: [id])
  userId       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("threads")
}

enum RoleEnum {
  ADMIN
  MEMBER
}
